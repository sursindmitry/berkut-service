version: "3.8"

networks:
  network:
    driver: bridge

volumes:
  platform_data:
  keycloak_data:
  redis_data:

services:
  app:
    image: app:ghcr.io/sursindmitry/berkut-service:latest
    container_name: berkut-service
    environment:
      - SPRING_PROFILES_ACTIVE=local

      # Telegram
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN:12345678}

      # PostgreSQL
      - SERVER_POSTGRES_HOST=${SERVER_POSTGRES_HOST:-main-db}
      - SERVER_POSTGRES_PORT=5432
      - SERVER_POSTGRES_DB=${MAIN_DB_NAME:-main_db}
      - SERVER_POSTGRES_USERNAME=${MAIN_DB_USER:-postgres}
      - SERVER_POSTGRES_PASSWORD=${MAIN_DB_PASSWORD:-postgres}

      # Redis
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379

      # Keycloak
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_REALM=platform
      - KEYCLOAK_RESOURCE=platform-service
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET:-**********}
    ports:
      - "9191:9191"
    depends_on:
      - postgres
      - keycloak
      - keycloak-db
      - redis
    networks:
      - network

  postgres:
    image: postgres:17
    container_name: main-db
    environment:
      - POSTGRES_DB=${MAIN_DB_NAME:-main_db}
      - POSTGRES_USER=${MAIN_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${MAIN_DB_PASSWORD:-postgres}
    volumes:
      - ./config/db/local/init:/docker-entrypoint-initdb.d
      - platform_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${MAIN_DB_USER:-postgres} -d ${MAIN_DB_NAME:-main_db}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: keycloak
    command: [ "start-dev", "--import-realm" ]
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER:-keycloak}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak}
    ports:
      - "8080:8080"
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - network

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=${KEYCLOAK_DB_USER:-keycloak}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak}
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER:-keycloak} -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network

  redis:
    image: redis:7.0-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network